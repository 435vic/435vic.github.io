<canvas id="rustbik"></canvas>

<style>
    canvas {
        position: fixed;
        width: 100vw;
        height: 100vh;
        top: 0;
        left: 0;
        z-index: -1;
    }
</style>

<script>
    import * as rustbik from "rustbik";

    const rustbikCanvas = document.querySelector<HTMLCanvasElement>("canvas#rustbik")!;
    rustbikCanvas.width = rustbikCanvas.clientWidth;
    rustbikCanvas.height = rustbikCanvas.clientHeight;

    const observer = new ResizeObserver((entries) => {
        const entry = entries.find(entry => entry.target === rustbikCanvas)!;
        if ('devicePixelContentBoxSize' in entry) {
            rustbikCanvas.width = entry.devicePixelContentBoxSize[0]!.inlineSize;
            rustbikCanvas.height = entry.devicePixelContentBoxSize[0]!.blockSize;
        } else {
            // @ts-ignore
            rustbikCanvas.width = entry.contentRect.width * window.devicePixelRatio;
            // @ts-ignore
            rustbikCanvas.height = entry.contentRect.height * window.devicePixelRatio;
        }
        
        // Notify rustbik that the canvas size has changed
        rustbikCanvas.dispatchEvent(new CustomEvent("observer_resize", {
            detail: entry
        }));
    });
    observer.observe(rustbikCanvas, { box: 'device-pixel-content-box' })

    try {
        rustbik.bind(rustbikCanvas, {
            premultipliedAlpha: false,
            alpha: true,
            failIfMajorPerformanceCaveat: true,
        });
    } catch (e) {
        console.error("failed to load: ", e);
    }
</script>